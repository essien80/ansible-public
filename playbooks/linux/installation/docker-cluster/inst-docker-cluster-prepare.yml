---
- name: Build Docker Swam with GlusterFS
  hosts: 'all'
  vars:
    data_disk: "/dev/vdb"
    gluster_mnt_root: "/mnt/docker-storage"
    gluster_storage_root: "/data/glusterfs/docker-vol/brick1"
  become: true

  tasks:
    - name: Install docker dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        update_cache: true

    - name: Add docker gpg key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        keyring: /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add docker repository
      ansible.builtin.apt_repository:
        filename: docker
        repo: deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename | lower }} stable
        state: present

    - name: Install docker engine
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-scan-plugin
          - docker-compose-plugin
        update_cache: true

    - name: Start and enable docker engine
      ansible.builtin.service:
        name: webmin
        state: started
        enabled: true

    - name: Install GlusterFS engine
      ansible.builtin.apt:
        name: glusterfs-server 
        update_cache: true

    - name: Start and enable docker engine
      ansible.builtin.service:
        name: glusterd
        state: started
        enabled: true     

    - name: Update host file with all cluster machines
      blockinfile:
        backup: yes
        path: /etc/hosts
        block: |
          {% for host in groups['all'] %} 
          {{ hostvars[host]['ansible_facts']['eth0']['ipv4']['address'] }} {{ hostvars[host]['ansible_facts']['fqdn'] }} {{ hostvars[host]['ansible_facts']['hostname'] }} 
          {% endfor %}

    - name: Create gluster backend dockter-storage directory
      ansible.builtin.file:
        path: {{ gluster_storage_root }}
        state: directory
        owner: {{ lookup('env', 'USER') }}
        group: docker
        mode: 0775        

    - name: Create dockter-storager directory in /mnt
      ansible.builtin.file:
        path: {{ gluster_mnt_root }}
        state: directory
        owner: {{ lookup('env', 'USER') }}
        group: docker
        mode: 0775

    - name: Create a new xfs on data disk 
      community.general.parted:
        device: {{ data_disk }}
        number: 1
        state: present
        fs_type: xfs

    - name: Mount data disk to gluster storage root
      ansible.posix.mount:
        path: {{ gluster_storage_root }}
        src: {{ data_disk }}
        fstype: xfs
        opts: defaults 0 0
        state: mounted 

    - name: Create a trusted storage pool
      gluster.gluster.gluster_peer:
        state: present
        nodes: "{{ target_hosts | d([]) }}"

    - name: Create gluster volume
      gluster.gluster.gluster_volume:
        state: present
        name: docker-vol
        bricks: {{ gluster_mnt_root }}
        rebalance: yes
        cluster: "{{ target_hosts | d([]) }}"
      run_once: true
      register: gfs_vol_creation_outcome

    - name: Start gluster volume
      gluster.gluster.gluster_volume:
        state: started
        name: docker-vol
      changed_when: gfs_vol_creation_outcome.failed == 'false'

- name: Setup Manager Nodes
  gather_facts: true
  hosts: managers
  become: true

  tasks:

    - name: Init a new swarm with default parameters
      community.docker.docker_swarm:
        state: present
